// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cookie_stand_api.Data;

#nullable disable

namespace cookie_stand_api.Migrations
{
    [DbContext(typeof(SalmonDbContext))]
    [Migration("20231005111136_odai1")]
    partial class odai1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cookie_stand_api.Models.CookieStand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageCookiesPerSale")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumCustomersPerHour")
                        .HasColumnType("int");

                    b.Property<int>("MinimumCustomersPerHour")
                        .HasColumnType("int");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CookieStands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageCookiesPerSale = 5.5,
                            Description = "d1",
                            Location = "a",
                            MaximumCustomersPerHour = 22,
                            MinimumCustomersPerHour = 11,
                            Owner = "1"
                        },
                        new
                        {
                            Id = 2,
                            AverageCookiesPerSale = 5.5,
                            Description = "d2",
                            Location = "b",
                            MaximumCustomersPerHour = 44,
                            MinimumCustomersPerHour = 22,
                            Owner = "2"
                        });
                });

            modelBuilder.Entity("cookie_stand_api.Models.HourlySale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StandCookieId")
                        .HasColumnType("int");

                    b.Property<int>("cookieStandId")
                        .HasColumnType("int");

                    b.Property<int>("salesvalue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cookieStandId");

                    b.ToTable("hourlySale");
                });

            modelBuilder.Entity("cookie_stand_api.Models.HourlySale", b =>
                {
                    b.HasOne("cookie_stand_api.Models.CookieStand", "cookieStand")
                        .WithMany("hourlySale")
                        .HasForeignKey("cookieStandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cookieStand");
                });

            modelBuilder.Entity("cookie_stand_api.Models.CookieStand", b =>
                {
                    b.Navigation("hourlySale");
                });
#pragma warning restore 612, 618
        }
    }
}
